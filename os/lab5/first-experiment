Первый этап:

Последняя строчка в report.log:
114000000

Последние две записи в системном журнале:
[  636.150093] Out of memory: Killed process 2735 (mem.bash) total-vm:8736552kB, anon-rss:7463412kB, file-rss:0kB, shmem-rss:0kB
[  636.529784] oom_reaper: reaped process 2735 (mem.bash), now anon-rss:0kB, file-rss:0kB, shmem-rss:0kB

Значение последней строки report.log (запуск одновременно с командой top):
111000000

Значения параметров памяти системы (верхние две строки над основной таблицей):

-Строчка MiB Mem: 
Строчка, выводящая количество свободных и занятых мегабайт оперативной памяти
С момента запуска скрипта количество занятой памяти росто, а количество свободной - убывало. Количество свободной памяти в пиковый момент - 120 мегабайт
В момент, когда скрипт был убит, количество свободной оперативной памяти возросло до 7200-7300 мегабайт

-Строчка MiB Swap:
По моим предположениям эта строчка показывает размер буфера памяти, необходимого для того, чтобы перекинуть часть данных из оперативной памяти в мостоянную
Пока скрипт mem.bash занимал меньше ~85% оперативной памяти, в этом буфере было свободно 2048 мегабайт (то есть весь буфер был свободен), но после достижения процессом mem.bash этой отметки количество свободной памяти в буфере начало стремительно уменьшаться, пока не стала равна 0 и процесс mem.bash не был убит
Как только это произошло, буфер снова освободился, видимо, выгрузив данные в потсоянную память

Значения параметров в строке таблицы, соответствующей работающему скрипту:
Процесс практически сразу же загрузил процессор на 100% и процент использования им оперативной памяти каждую секунду возрастал примерно на 2%, пока не достиг 92%. Тогда он остановился и через какое-то время был убит

Изменения в верхних пяти процессах:
Когда процесс mem.bash стал расходовать более 90% оперативной памяти, появился процесс kswapd0, который сначала был на втором-третьем месте, а затем перешёл на первое и процесс mem.bash пропал


Второй этап:

Наблюдения за значениями:

Значения параметров системы (верхние две строки над основной таблицей):

-MiB Mem:
Аналагично первому этапу после запуска скриптов росло количество занятой оперативной памяти, при этом количество свободной памяти в пиковый момент снова бало примерно 120 мегабайт
После того, как оба процесса были завершены, память, как и на первом этапе, освободилась до 7200-7300 мегабайт, но при этом освобождалась заметно дольше. При этом после завершения одного из скриптов второй занял освободившуюся им память

-MiB Swap:
С самого начала запуска скриптов из 2048 мегабайт буфера свободно было 1460. Аналогично первому этапу, в момент, когда оба скрипта в сумме занимали приблизительно 93% оперативной памяти, буфер начал заполняться и когда в нём кончилась свободная памяти он снова освободился, но происходило это заметно дольше, чем на первом этапе
Когда один из скриптов аварийно завершлся, буфер отработал аналогично первому этапу с оставшимся скриптом

Значения параметров в строке таблицы, соответствующей работающим скриптам:
Оба скрипта сразу же нагрузили процессор на 100% каждый, а процент занятой оперативной памяти обоих возрастал как на первом этапе по 2% в секунду, но рост остановился когда оба достигли значений в 46-47% и затем один из скриптов завершился. После этого оставшийся скрипт занял освободившуюся оперативную память и процент её использования этим скриптом рос до 92%, как на первом этапе

Изменения в верхних пяти процессах:
Оба процесса mem.bash и mem2.bash работали практически одинаково и стабильно занимали первые две строчки, периодически меняясь местами
Когда оперативная память была нагружена на 93%, снова появился процесс kswapd0, который занял третье место и после завершения одного из процессов исчез. Затем, когда оставшийся скрипт нагрузил память больше 90%, он снова появился на втором месте и пропал после завершения оставшегося скрипта


Последние записи о скриптах в системном журнале:
[  636.150093] Out of memory: Killed process 2735 (mem.bash) total-vm:8736552kB, anon-rss:7463412kB, file-rss:0kB, shmem-rss:0kB
[  636.529784] oom_reaper: reaped process 2735 (mem.bash), now anon-rss:0kB, file-rss:0kB, shmem-rss:0kB


Значение в последней строке report.log:
54000000

Значение в последней строке report2.log:
108000000

Примечание: эксперимент проводился два раза и оба раза дали практически одинаковый результат, но стоит отметить, что при первом запуске сначала завершился второй скрипт и потом первый, а при втором - наоборот

Обработка результатов: сюда нужно вставить графики
